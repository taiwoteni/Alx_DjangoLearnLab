# Generated by Django 5.2.4 on 2025-08-11 04:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The author's full name", max_length=100, verbose_name='Author Name')),
                ('bio', models.TextField(blank=True, help_text='Detailed biography of the author', verbose_name='Biography')),
                ('birth_date', models.DateField(blank=True, help_text="Author's date of birth", null=True, verbose_name='Date of Birth')),
                ('nationality', models.CharField(blank=True, help_text="Author's country of origin", max_length=50, verbose_name='Nationality')),
                ('website', models.URLField(blank=True, help_text="Author's official website", verbose_name='Website')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="The book's title", max_length=200, verbose_name='Book Title')),
                ('isbn', models.CharField(help_text='International Standard Book Number (13 digits)', max_length=13, unique=True, verbose_name='ISBN')),
                ('publication_year', models.IntegerField(help_text='Year the book was published', validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2025)], verbose_name='Publication Year')),
                ('genre', models.CharField(choices=[('fiction', 'Fiction'), ('non-fiction', 'Non-Fiction'), ('mystery', 'Mystery'), ('romance', 'Romance'), ('sci-fi', 'Science Fiction'), ('fantasy', 'Fantasy'), ('biography', 'Biography'), ('history', 'History'), ('self-help', 'Self-Help'), ('business', 'Business'), ('technology', 'Technology'), ('other', 'Other')], default='other', help_text='Book genre/category', max_length=20)),
                ('pages', models.PositiveIntegerField(blank=True, help_text='Number of pages', null=True, verbose_name='Page Count')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Book rating (0.0 to 5.0)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('price', models.DecimalField(decimal_places=2, help_text='Book price in USD', max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField(blank=True, help_text='Detailed book description')),
                ('cover_image', models.ImageField(blank=True, help_text='Book cover image', null=True, upload_to='book_covers/')),
                ('in_stock', models.BooleanField(default=True, help_text='Whether the book is available for purchase')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
                ('author', models.ForeignKey(help_text="The book's author", on_delete=django.db.models.deletion.CASCADE, related_name='books', to='api.author')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'ordering': ['-publication_year', 'title'],
                'unique_together': {('title', 'author', 'publication_year')},
            },
        ),
    ]
